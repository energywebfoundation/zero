/*
 * Generated by orval v5.4.7 üç∫
 * Do not edit manually.
 * Energy Web Zero API
 * OpenAPI spec version: 0.3
 */
export interface LoginDataDTO {
  username: string;
  password: string;
}

export interface LoginResponseDataDto {
  accessToken: string;
}

export type UserRole = 'seller' | 'buyer' | 'admin';


export const UserRole = {
  seller: 'seller' as UserRole,
  buyer: 'buyer' as UserRole,
  admin: 'admin' as UserRole,
};

export interface UserDto {
  id: number;
  email: string;
  firstName: string;
  lastName: string;
  roles: UserRole[];
  emailConfirmed: boolean;
}

export interface CreateUserDto {
  email: string;
  firstName: string;
  lastName: string;
  roles: UserRole[];
  password: string;
}

export interface UpdateUserDto {
  firstName?: string;
  lastName?: string;
  roles?: UserRole[];
  password?: string;
}

export interface PasswordChangeDto {
  oldPassword: string;
  newPassword: string;
}

export interface PasswordResetInitDto {
  email: string;
}

export interface PasswordResetDto {
  token: string;
  newPassword: string;
}

export interface CreateEmailConfirmationDto {
  email: string;
  password: string;
}

export interface UpdateEmailConfirmationDto {
  token: string;
}

export type DraftType = 'facility';


export const DraftType = {
  facility: 'facility' as DraftType,
};

export type DraftDtoData = {};

export interface DraftDto {
  id: number;
  userId: number;
  data: DraftDtoData;
  draftType: DraftType;
}

export type CreateDraftDtoData = {};

export interface CreateDraftDto {
  data: CreateDraftDtoData;
  draftType: DraftType;
}

export type UpdateDraftDtoData = {};

export interface UpdateDraftDto {
  data?: UpdateDraftDtoData;
}

export type FileType = 'facility' | 'sustainability' | 'company' | 'product';


export const FileType = {
  facility: 'facility' as FileType,
  sustainability: 'sustainability' as FileType,
  company: 'company' as FileType,
  product: 'product' as FileType,
};

export type FileMetadataDtoMeta = {};

export type FileMetadataDtoUploadedAt = {};

export type FileMetadataDtoProcessingCompletedAt = {};

export interface FileMetadataDto {
  id: string;
  filename: string;
  fileExtension: string;
  mimetype: string;
  ownerId: number;
  fileType: FileType;
  meta?: FileMetadataDtoMeta;
  uploadedAt: FileMetadataDtoUploadedAt;
  processingCompletedAt: FileMetadataDtoProcessingCompletedAt;
}

export interface UploadFileDto {
  file: Blob;
}

export interface UploadFileResponseDto {
  id?: string;
}

export type UpdateFileMetadataDtoMeta = {};

export interface UpdateFileMetadataDto {
  fileType: FileType;
  meta?: UpdateFileMetadataDtoMeta;
}

