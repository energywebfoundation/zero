/*
 * Generated by orval v5.4.12 üç∫
 * Do not edit manually.
 * Energy Web Zero API
 * OpenAPI spec version: 0.3
 */
import {
  useMutation,
  UseMutationOptions
} from 'react-query'
import type {
  LoginResponseDataDto,
  LoginDataDTO
} from './energyWebZeroAPI.schemas'
import appControllerLoginMutator from '../response-type'


type AsyncReturnType<
T extends (...args: any) => Promise<any>,
U = unknown
> = T extends (...args: any) => Promise<infer R> ? (U extends R ? U : R) : any;


type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;

export const appControllerLogin = <TData = LoginResponseDataDto>(
    loginDataDTO: LoginDataDTO,
 options?: SecondParameter<typeof appControllerLoginMutator>) => {
      return appControllerLoginMutator<TData>(
      {url: `/api/auth/login`, method: 'post',
      data: loginDataDTO
    },
      // eslint-disable-next-line
// @ts-ignore
 options);
    }
  


    export const useAppControllerLogin = <TData = AsyncReturnType<typeof appControllerLogin,LoginResponseDataDto>,
    TError = unknown,
    
    TContext = unknown>(options?: { mutation?:UseMutationOptions<TData, TError,{data: LoginDataDTO}, TContext>, request?: SecondParameter<typeof appControllerLoginMutator>}
) => {
      const {mutation: mutationOptions, request: requestOptions} = options || {}

      return useMutation<TData, TError, {data: LoginDataDTO}, TContext>((props) => {
        const {data} = props || {};

        return  appControllerLogin<TData>(data,requestOptions)
      }, mutationOptions)
    }
    