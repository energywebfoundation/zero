/*
 * Generated by orval v5.4.7 üç∫
 * Do not edit manually.
 * Energy Web Zero API
 * OpenAPI spec version: 0.3
 */
import {
  useQuery,
  UseQueryOptions
} from 'react-query'
import appControllerGetDataMutator from '../response-type'


type AsyncReturnType<
T extends (...args: any) => Promise<any>
> = T extends (...args: any) => Promise<infer R> ? R : any;


type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;

export const appControllerGetData = <TData = unknown>(
    
 options?: SecondParameter<typeof appControllerGetDataMutator>) => {
      return appControllerGetDataMutator<TData>(
      {url: `/api`, method: 'get'
    },
      // eslint-disable-next-line
// @ts-ignore
 options);
    }
  

export const getAppControllerGetDataQueryKey = () => [`/api`]

    
export const useAppControllerGetData = <TQueryFnData = unknown, TError = unknown, TData = TQueryFnData>(
  options?: { query?:UseQueryOptions<AsyncReturnType<typeof appControllerGetData>, TError, TData>, request?: SecondParameter<typeof appControllerGetDataMutator>}

  ) => {

  const {query: queryOptions, request: requestOptions} = options || {}

  const queryKey = queryOptions?.queryKey ?? getAppControllerGetDataQueryKey();

  const query = useQuery<AsyncReturnType<typeof appControllerGetData>, TError, TData>(queryKey, () => appControllerGetData<TQueryFnData>(requestOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}

