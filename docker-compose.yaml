version: '3'

services:
  db:
    image: postgres:13.3-alpine
    restart: unless-stopped
#    ports:
#      - '5432:5432'
#      - '5433:5432'
    volumes:
    - qa-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: zero
    networks:
      zero:

  mailserver:
    image: mailhog/mailhog:latest
    restart: unless-stopped
    ports:
      - 8025:8025
    networks:
      zero:

  ui:
    image: zero-ui
    restart: unless-stopped
    depends_on:
      - api
    ports:
    - 8080:80
    environment:
      API_BASE_URL: http://localhost:3333

  studio:
    image: zero-api
    restart: unless-stopped
    depends_on:
      - db
    profiles:
      - debug
    ports:
      - '5555:5555'
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/zero"
    command: prisma studio
    networks:
      zero:

  api:
    image: zero-api
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - '3333:3333'
    volumes:
    - qa-backend-temp:/tmp
    - qa-backend-uploaded_files:/uploaded-files
    environment:
      LOG_LEVELS: "log,error,warn,debug,verbose"
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/zero"
      SMTP_URL: "smtp://mailserver:1025"
      UI_BASE_URL: "http://localhost:8080"
      JWT_SECRET: "secret"
      JWT_TTL: "24h"
      CORS_ORIGIN: "http://localhost:8080"
      CORS_MAX_AGE: 60
      AWS_BUCKET:
      AWS_REGION:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      FILES_BASE_URL: "http://localhost:3333/api/files"

    networks:
      zero:

volumes:
  qa-db-data:
  qa-backend-temp:
  qa-backend-uploaded_files:

networks:
  zero:
